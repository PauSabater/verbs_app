.inputExerciseText {
    position: relative;
    padding: 0 40px 0 25px;
    height: 42px;
    width: 110px;
    border-radius: 10px;
    border: 1px solid var(--c-grey-lighter);
    outline: 1px solid transparent;
    margin: 0 3px;
    font-size: inherit;
    transition: border-color var(--tr-base), outline var(--tr-base), background-color var(--tr-base);

    &:focus {
        outline: none;
        border-color: var(--c-grey);
        outline: 1px solid var(--c-grey);
    }

    &:hover {
        border-color: var(--c-grey);
    }

    &[data-state="correct"] {
        pointer-events: none;
        background-color: transparent;

        & + button {
            pointer-events: none;

            .imgMicrophone {
                transition: none !important;
            }

            &:hover .imgMicrophone {
                filter: none !important;
                transition: none !important;
            }
        }
    }

    &[data-state="incorrect"] {
        border-color: var(--c-error);
    }
}

.wrapper {
    position: relative;
    display: inline-flex;

    &:after {
        content: "";
        position: absolute;
        bottom: 3px;
        border-bottom: 1px dotted var(--c-grey-lighter);
        left: 50%;
        width: 90%;
        height: 0;
        background-color: black;
        /* background-color: var(--c-grey-light); */
        opacity: 0;
        transform: translateX(-50%);
    }

    div[data-loader] {
        top: 50%;
        right: 50px;
        transform: translateY(-50%);
    }
}

.btnAudio {
    cursor: pointer;
    position: absolute;
    right: 6px;
    height: calc(100% - 6px);
    top: 50%;
    border-radius: 10px;
    border: none;
    transform: translateY(-50%);
    background-color: var(--bg-main);
    transition: background-color var(--tr-base);

    .imgMicrophone {
        transition: filter var(--tr-base);
    }

    &:hover {
        background-color: var(--c-grey-light);

        .imgMicrophone {
            filter: brightness(10);
        }
    }
}

.imgIncorrect {
    pointer-events: none;
    position: absolute;
    left: 8px;
    top: 50%;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    opacity: 0;
    z-index: 1;
    transition: opacity var(--tr-base);

    &[data-state="incorrect"] {
        opacity: 1;
    }
}